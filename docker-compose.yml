services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        VERSION: 1.0.0
        BUILD_DATE: ${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        VCS_REF: ${VCS_REF:-$(git rev-parse HEAD)}
    container_name: autosocioly-app
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=false
      - LOG_LEVEL=INFO
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./static/uploads:/app/static/uploads
      - ./logs:/app/logs
    networks:
      - autosocioly-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: autosocioly-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - autosocioly-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    sysctls:
      - net.core.somaxconn=65535

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: autosocioly-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - autosocioly-network
    profiles:
      - dev

  nginx:
    image: nginx:alpine
    container_name: autosocioly-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/var/www/static:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - autosocioly-network
    profiles:
      - production

volumes:
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./redis_data

networks:
  autosocioly-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16